{"version":3,"file":"dev.js","sourceRoot":"","sources":["../../../src/cli/services/dev.ts"],"names":[],"mappings":"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","sourcesContent":["import {hasRequiredThemeDirectories} from '../utilities/theme-fs.js'\nimport {currentDirectoryConfirmed} from '../utilities/theme-ui.js'\nimport {renderSuccess, renderWarning} from '@shopify/cli-kit/node/ui'\nimport {AdminSession, ensureAuthenticatedStorefront, ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {outputDebug} from '@shopify/cli-kit/node/output'\nimport {useEmbeddedThemeCLI} from '@shopify/cli-kit/node/context/local'\n\nconst DEFAULT_HOST = '127.0.0.1'\nconst DEFAULT_PORT = '9292'\n\n// Tokens are valid for 120 min, better to be safe and refresh every 110 min\nconst THEME_REFRESH_TIMEOUT_IN_MS = 110 * 60 * 1000\n\nexport interface DevOptions {\n  adminSession: AdminSession\n  storefrontToken: string\n  directory: string\n  store: string\n  password?: string\n  open: boolean\n  theme: string\n  host?: string\n  port?: string\n  force: boolean\n  flagsToPass: string[]\n}\n\nexport async function dev(options: DevOptions) {\n  const command = ['theme', 'serve', options.directory, ...options.flagsToPass]\n\n  if (!(await hasRequiredThemeDirectories(options.directory)) && !(await currentDirectoryConfirmed(options.force))) {\n    return\n  }\n\n  renderLinks(options.store, options.theme, options.host, options.port)\n\n  let adminToken: string | undefined = options.adminSession.token\n  let storefrontToken: string | undefined = options.storefrontToken\n\n  if (options.open && useEmbeddedThemeCLI()) {\n    command.push('--open')\n  }\n\n  if (!options.password && useEmbeddedThemeCLI()) {\n    adminToken = undefined\n    storefrontToken = undefined\n\n    setInterval(() => {\n      outputDebug('Refreshing theme session tokens...')\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      refreshTokens(options.store, options.password)\n    }, THEME_REFRESH_TIMEOUT_IN_MS)\n  }\n\n  await execCLI2(command, {store: options.store, adminToken, storefrontToken})\n}\n\nexport function renderLinks(store: string, themeId: string, host = DEFAULT_HOST, port = DEFAULT_PORT) {\n  renderSuccess({\n    body: [\n      {\n        list: {\n          title: {bold: 'Preview your theme'},\n          items: [\n            {\n              link: {\n                url: `http://${host}:${port}`,\n              },\n            },\n          ],\n        },\n      },\n    ],\n    nextSteps: [\n      [\n        {\n          link: {\n            label: 'Customize your theme at the theme editor',\n            url: `https://${store}/admin/themes/${themeId}/editor`,\n          },\n        },\n      ],\n      [\n        {\n          link: {\n            label: 'Share your theme preview',\n            url: `https://${store}/?preview_theme_id=${themeId}`,\n          },\n        },\n        {\n          subdued: `(https://${store}/?preview_theme_id=${themeId})`,\n        },\n      ],\n    ],\n  })\n}\n\nexport function showDeprecationWarnings(args: string[]) {\n  const eFlagIndex = args.findIndex((arg) => arg === '-e')\n  const wrongEnvFlag = eFlagIndex >= 0 && (!args[eFlagIndex + 1] || args[eFlagIndex + 1]?.startsWith('-'))\n  if (wrongEnvFlag) {\n    renderWarning({\n      body: [\n        'If you want to enable synchronization with Theme Editor, please use',\n        {command: '--theme-editor-sync'},\n        {char: '.'},\n        'The shortcut',\n        {command: '-e'},\n        'is now reserved for environments.',\n      ],\n    })\n  }\n}\n\nexport async function refreshTokens(store: string, password: string | undefined) {\n  const adminSession = await ensureAuthenticatedThemes(store, password, [], true)\n  const storefrontToken = await ensureAuthenticatedStorefront([], password)\n  if (useEmbeddedThemeCLI()) {\n    await execCLI2(['theme', 'token', '--admin', adminSession.token, '--sfr', storefrontToken])\n  }\n  return {adminSession, storefrontToken}\n}\n"]}