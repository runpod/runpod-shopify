{"version":3,"file":"development-theme-manager.js","sourceRoot":"","sources":["../../../src/cli/utilities/development-theme-manager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,mBAAmB,EAAE,mBAAmB,EAAE,sBAAsB,EAAC,MAAM,8BAA8B,CAAA;AAC7G,OAAO,EAAC,YAAY,EAAC,MAAM,4CAA4C,CAAA;AAEvE,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AAGtD,MAAM,CAAC,MAAM,2BAA2B,GAAG,CAAC,OAAe,EAAE,EAAE,CAC7D,sBAAsB,OAAO,6DAA6D,CAAA;AAC5F,MAAM,CAAC,MAAM,2BAA2B,GACtC,gFAAgF,CAAA;AAElF,MAAM,OAAO,uBAAwB,SAAQ,YAAY;IAGvD,YAAY,YAA0B;QACpC,KAAK,CAAC,YAAY,CAAC,CAAA;QAHX,YAAO,GAAG,aAAa,CAAA;QAI/B,IAAI,CAAC,OAAO,GAAG,mBAAmB,EAAE,CAAA;IACtC,CAAC;IAED,KAAK,CAAC,IAAI;QACR,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAA;QAChC,IAAI,CAAC,KAAK,EAAE;YACV,MAAM,IAAI,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,2BAA2B,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAA;SAC7G;QACD,OAAO,KAAK,CAAA;IACd,CAAC;IAES,QAAQ,CAAC,OAAe;QAChC,mBAAmB,CAAC,OAAO,CAAC,CAAA;IAC9B,CAAC;IAES,WAAW;QACnB,sBAAsB,EAAE,CAAA;IAC1B,CAAC;CACF","sourcesContent":["import {getDevelopmentTheme, setDevelopmentTheme, removeDevelopmentTheme} from '../services/local-storage.js'\nimport {ThemeManager} from '@shopify/cli-kit/node/themes/theme-manager'\nimport {AdminSession} from '@shopify/cli-kit/node/session'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {Theme} from '@shopify/cli-kit/node/themes/types'\n\nexport const DEVELOPMENT_THEME_NOT_FOUND = (themeId: string) =>\n  `Development theme #${themeId} could not be found. Please create a new development theme.`\nexport const NO_DEVELOPMENT_THEME_ID_SET =\n  'No development theme ID has been set. Please create a development theme first.'\n\nexport class DevelopmentThemeManager extends ThemeManager {\n  protected context = 'Development'\n\n  constructor(adminSession: AdminSession) {\n    super(adminSession)\n    this.themeId = getDevelopmentTheme()\n  }\n\n  async find(): Promise<Theme> {\n    const theme = await this.fetch()\n    if (!theme) {\n      throw new AbortError(this.themeId ? DEVELOPMENT_THEME_NOT_FOUND(this.themeId) : NO_DEVELOPMENT_THEME_ID_SET)\n    }\n    return theme\n  }\n\n  protected setTheme(themeId: string): void {\n    setDevelopmentTheme(themeId)\n  }\n\n  protected removeTheme(): void {\n    removeDevelopmentTheme()\n  }\n}\n"]}