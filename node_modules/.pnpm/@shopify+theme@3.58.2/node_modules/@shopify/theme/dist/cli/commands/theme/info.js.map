{"version":3,"file":"info.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/info.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAC,cAAc,EAAE,YAAY,EAAC,MAAM,wBAAwB,CAAA;AACnE,OAAO,EAAC,gBAAgB,EAAC,MAAM,gCAAgC,CAAA;AAC/D,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AACvE,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,aAAa,EAAE,UAAU,EAAC,MAAM,8BAA8B,CAAA;AAEtE,MAAqB,IAAK,SAAQ,YAAY;IA0BrC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;QAEtC,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACrC,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAA;QAE3E,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,EAAE;YACpC,MAAM,MAAM,GAAG,MAAM,cAAc,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;YACxD,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,IAAI,UAAU,CAAC,kBAAkB,CAAC,CAAA;aACzC;YAED,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,OAAO,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;aACnD;YAED,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;iBAC7C,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,aAAa,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;iBACjD,IAAI,CAAC,MAAM,CAAC,CAAA;YACf,UAAU,CAAC,WAAW,CAAC,CAAA;SACxB;aAAM;YACL,MAAM,WAAW,GAAG,MAAM,YAAY,CAAC,EAAC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAC,CAAC,CAAA;YACzE,UAAU,CAAC,WAAW,CAAC,CAAA;SACxB;IACH,CAAC;;AAjDM,gBAAW,GAChB,wIAAwI,CAAA;AAEnI,UAAK,GAAG;IACb,GAAG,WAAW;IACd,KAAK,EAAE,UAAU,CAAC,KAAK;IACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC;QACzB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,4CAA4C;QACzD,GAAG,EAAE,0BAA0B;KAChC,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,uCAAuC;QACpD,GAAG,EAAE,uBAAuB;KAC7B,CAAC;IACF,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;QAClB,WAAW,EAAE,gCAAgC;QAC7C,OAAO,EAAE,KAAK;QACd,GAAG,EAAE,mBAAmB;KACzB,CAAC;CACH,CAAA;eAxBkB,IAAI","sourcesContent":["import {themeFlags} from '../../flags.js'\nimport {fetchThemeInfo, fetchDevInfo} from '../../services/info.js'\nimport {ensureThemeStore} from '../../utilities/theme-store.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {Flags} from '@oclif/core'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {formatSection, outputInfo} from '@shopify/cli-kit/node/output'\n\nexport default class Info extends ThemeCommand {\n  static description =\n    'Displays information about your theme environment, including your current store. Can also retrieve information about a specific theme.'\n\n  static flags = {\n    ...globalFlags,\n    store: themeFlags.store,\n    password: themeFlags.password,\n    environment: themeFlags.environment,\n    development: Flags.boolean({\n      char: 'd',\n      description: 'Retrieve info from your development theme.',\n      env: 'SHOPIFY_FLAG_DEVELOPMENT',\n    }),\n    theme: Flags.string({\n      char: 't',\n      description: 'Theme ID or name of the remote theme.',\n      env: 'SHOPIFY_FLAG_THEME_ID',\n    }),\n    json: Flags.boolean({\n      description: 'Output the theme info as JSON.',\n      default: false,\n      env: 'SHOPIFY_FLAG_JSON',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(Info)\n\n    const store = ensureThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, flags.password)\n\n    if (flags.theme || flags.development) {\n      const output = await fetchThemeInfo(adminSession, flags)\n      if (!output) {\n        throw new AbortError('Theme not found!')\n      }\n\n      if (flags.json) {\n        return outputInfo(JSON.stringify(output, null, 2))\n      }\n\n      const infoMessage = Object.entries(output.theme)\n        .map(([key, val]) => formatSection(key, `${val}`))\n        .join('\\n\\n')\n      outputInfo(infoMessage)\n    } else {\n      const infoMessage = await fetchDevInfo({cliVersion: this.config.version})\n      outputInfo(infoMessage)\n    }\n  }\n}\n"]}