{"version":3,"file":"package.js","sourceRoot":"","sources":["../../../src/cli/services/package.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,GAAG,EAAC,MAAM,gCAAgC,CAAA;AAClD,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAC,MAAM,0BAA0B,CAAA;AAC7D,OAAO,EAAC,UAAU,EAAC,MAAM,6BAA6B,CAAA;AACtD,OAAO,EAAC,aAAa,EAAC,MAAM,0BAA0B,CAAA;AACtD,OAAO,EAAC,WAAW,EAAE,cAAc,EAAC,MAAM,4BAA4B,CAAA;AAEtE,MAAM,iBAAiB,GAAG;IACxB,WAAW;IACX,WAAW;IACX,WAAW;IACX,YAAY;IACZ,aAAa;IACb,aAAa;IACb,cAAc;IACd,wBAAwB;IACxB,kBAAkB;IAClB,uBAAuB;CACxB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AAEX,4EAA4E;AAC5E,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,cAAsB;IACvD,MAAM,WAAW,GAAG,MAAM,mBAAmB,CAAC,cAAc,CAAC,CAAA;IAE7D,MAAM,aAAa,GAAG,GAAG,cAAc,IAAI,WAAW,EAAE,CAAA;IACxD,MAAM,gBAAgB,GAAG,GAAG,cAAc,KAAK,iBAAiB,GAAG,CAAA;IAEnE,MAAM,GAAG,CAAC;QACR,cAAc;QACd,aAAa;QACb,gBAAgB;KACjB,CAAC,CAAA;IAEF,aAAa,CAAC;QACZ,IAAI,EAAE,CAAC,kCAAkC,EAAE,EAAC,QAAQ,EAAE,cAAc,CAAC,aAAa,CAAC,EAAC,CAAC;KACtF,CAAC,CAAA;AACJ,CAAC;AAED,KAAK,UAAU,mBAAmB,CAAC,cAAsB;IACvD,MAAM,YAAY,GAAG,WAAW,CAAC,cAAc,EAAE,6BAA6B,CAAC,CAAA;IAE/E,IAAI,CAAC,CAAC,MAAM,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE;QACrC,MAAM,IAAI,UAAU,CAAC,8DAA8D,CAAC,CAAA;KACrF;IAED,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAA;IAC/D,MAAM,SAAS,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC,OAAuB,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,KAAK,YAAY,CAAC,CAAA;IAEjG,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,UAAU,KAAK,SAAS,EAAE;QACjE,MAAM,IAAI,UAAU,CAAC,8EAA8E,CAAC,CAAA;KACrG;IAED,MAAM,gBAAgB,GAAG,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;IAElG,OAAO,GAAG,gBAAgB,MAAM,CAAA;AAClC,CAAC","sourcesContent":["import {zip} from '@shopify/cli-kit/node/archiver'\nimport {fileExists, readFile} from '@shopify/cli-kit/node/fs'\nimport {AbortError} from '@shopify/cli-kit/node/error'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\nimport {resolvePath, relativizePath} from '@shopify/cli-kit/node/path'\n\nconst themeFilesPattern = [\n  'assets/**',\n  'config/**',\n  'layout/**',\n  'locales/**',\n  'sections/**',\n  'snippets/**',\n  'templates/**',\n  'templates/customers/**',\n  'release-notes.md',\n  'update_extension.json',\n].join('|')\n\n// package is a reserved word so the function needs to be named packageTheme\nexport async function packageTheme(inputDirectory: string) {\n  const packageName = await getThemePackageName(inputDirectory)\n\n  const outputZipPath = `${inputDirectory}/${packageName}`\n  const matchFilePattern = `${inputDirectory}/(${themeFilesPattern})`\n\n  await zip({\n    inputDirectory,\n    outputZipPath,\n    matchFilePattern,\n  })\n\n  renderSuccess({\n    body: ['Your local theme was packaged in', {filePath: relativizePath(outputZipPath)}],\n  })\n}\n\nasync function getThemePackageName(inputDirectory: string) {\n  const settingsPath = resolvePath(inputDirectory, 'config/settings_schema.json')\n\n  if (!(await fileExists(settingsPath))) {\n    throw new AbortError('Provide a config/settings_schema.json to package your theme.')\n  }\n\n  const parsedSettings = JSON.parse(await readFile(settingsPath))\n  const themeInfo = parsedSettings.find((setting: {name: string}) => setting.name === 'theme_info')\n\n  if (themeInfo === undefined || themeInfo.theme_name === undefined) {\n    throw new AbortError('Provide a theme_info.theme_name configuration in config/settings_schema.json')\n  }\n\n  const themeNameVersion = [themeInfo.theme_name, themeInfo.theme_version].filter(Boolean).join('-')\n\n  return `${themeNameVersion}.zip`\n}\n"]}