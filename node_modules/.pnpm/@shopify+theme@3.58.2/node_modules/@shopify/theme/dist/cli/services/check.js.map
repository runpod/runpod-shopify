{"version":3,"file":"check.js","sourceRoot":"","sources":["../../../src/cli/services/check.ts"],"names":[],"mappings":"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","sourcesContent":["import {fileExists, readFileSync, writeFile} from '@shopify/cli-kit/node/fs'\nimport {outputInfo, outputSuccess} from '@shopify/cli-kit/node/output'\nimport {joinPath} from '@shopify/cli-kit/node/path'\nimport {renderInfo} from '@shopify/cli-kit/node/ui'\nimport {\n  Severity,\n  applyFixToString,\n  autofix,\n  loadConfig,\n  type FixApplicator,\n  type Offense,\n  type Theme,\n} from '@shopify/theme-check-node'\nimport YAML from 'yaml'\n\ninterface OffenseMap {\n  [check: string]: Offense[]\n}\n\ninterface TransformedOffense {\n  check: string\n  severity: string\n  start_row: number\n  start_column: number\n  end_row: number\n  end_column: number\n  message: string\n}\n\ninterface TransformedOffenseMap {\n  path: string\n  offenses: TransformedOffense[]\n  errorCount: number\n  warningCount: number\n  infoCount: number\n}\n\ntype SeverityCounts = Partial<{\n  [K in keyof typeof Severity]: number\n}>\n\nexport type FailLevel = 'error' | 'suggestion' | 'style' | 'warning' | 'info' | 'crash'\n\nfunction failLevelToSeverity(failLevel: FailLevel): Severity | undefined {\n  switch (failLevel) {\n    case 'error':\n      return Severity.ERROR\n    case 'suggestion':\n    case 'warning':\n      return Severity.WARNING\n    case 'style':\n    case 'info':\n      return Severity.INFO\n    case 'crash':\n      return undefined\n  }\n}\n\nfunction severityToLabel(severity: Severity) {\n  switch (severity) {\n    case Severity.ERROR:\n      return 'error'\n    case Severity.WARNING:\n      return 'warning'\n    case Severity.INFO:\n      return 'info'\n  }\n}\n\n/**\n * Returns a code snippet from a file. All line numbers given MUST be zero indexed\n */\nfunction getSnippet(absolutePath: string, startLine: number, endLine: number) {\n  const fileContent = readFileSync(absolutePath).toString()\n  const lines = fileContent.split('\\n')\n  const snippetLines = lines.slice(startLine, endLine + 1)\n  const isSingleLine = snippetLines.length === 1\n\n  return snippetLines\n    .map((line, index) => {\n      // For each line in snippetLines, prepend the line number and a space.\n      const lineNumber = startLine + index + 1\n\n      // Normalize variable whitespace from single line snippets\n      const formattedLine = isSingleLine ? line.trim() : line\n      return `${lineNumber}  ${formattedLine}`\n    })\n    .join('\\n')\n}\n\nfunction severityToToken(severity: Severity) {\n  /**\n   * Leading newlines works around a formatting behavior in the ui library where\n   * spaces are automatically appended between tokens. This can cause unexpected\n   * formatting issues when presenting theme check offenses\n   */\n  switch (severity) {\n    case Severity.ERROR:\n      return {error: '\\n[error]:'}\n    case Severity.WARNING:\n      return {warn: '\\n[warning]:'}\n    case Severity.INFO:\n      return {info: '\\n[info]:'}\n  }\n}\n\n/**\n * Format theme-check Offenses into a format for cli-kit to output.\n */\nexport function formatOffenses(offenses: Offense[]) {\n  const offenseBodies = offenses.map((offense, index) => {\n    const {message, absolutePath, start, end, check, severity} = offense\n    // Theme check line numbers are zero indexed, but intuitively 1-indexed\n    const codeSnippet = getSnippet(absolutePath, start.line, end.line)\n\n    // Ensure enough padding between offenses\n    const offensePadding = `${index === offenses.length - 1 ? '' : '\\n\\n'}`\n\n    return [\n      severityToToken(severity),\n      {bold: `${check}`},\n      {subdued: `\\n${message}`},\n      `\\n\\n${codeSnippet}`,\n      offensePadding,\n    ]\n  })\n\n  return offenseBodies.flat()\n}\n\nconst offenseSeverityAscending = (offenseA: Offense, offenseB: Offense) => offenseA.severity - offenseB.severity\n\n/**\n * Sorts theme check offenses. First all offenses are grouped by file path,\n * then within each collection of offenses, they are sorted by severity.\n */\nexport function sortOffenses(offenses: Offense[]): OffenseMap {\n  // Bucket offenses by filename\n  const offensesByFile = offenses.reduce((acc: OffenseMap, offense: Offense) => {\n    const {absolutePath} = offense\n    if (!acc[absolutePath]) {\n      acc[absolutePath] = []\n    }\n\n    acc[absolutePath]!.push(offense)\n    return acc\n  }, {})\n\n  // Finally sort each collection of offenses by severity\n  return Object.keys(offensesByFile).reduce((acc: OffenseMap, filePath) => {\n    acc[filePath] = offensesByFile[filePath]!.sort(offenseSeverityAscending)\n    return acc\n  }, {})\n}\n\n/**\n * Returns the number of offenses for each severity type.\n */\nfunction countOffenseTypes(offenses: Offense[]) {\n  return offenses.reduce((acc: SeverityCounts, offense: Offense) => {\n    const isSeverityUncounted = !Object.prototype.hasOwnProperty.call(acc, offense.severity)\n    if (isSeverityUncounted) {\n      acc[offense.severity] = 0\n    }\n\n    acc[offense.severity]!++\n\n    return acc\n  }, {})\n}\n\nexport function formatSummary(offenses: Offense[], offensesByFile: OffenseMap, theme: Theme): string[] {\n  const summary = [`${theme.length} files inspected`]\n\n  if (offenses.length === 0) {\n    summary.push('with no offenses found.')\n  } else {\n    summary.push(`with ${offenses.length} total offenses found across ${Object.keys(offensesByFile).length} files.`)\n\n    const counts = countOffenseTypes(offenses)\n\n    if (counts[Severity.ERROR]) {\n      summary.push(`\\n${counts[Severity.ERROR]} errors.`)\n    }\n    if (counts[Severity.WARNING]) {\n      summary.push(`\\n${counts[Severity.WARNING]} warnings.`)\n    }\n    if (counts[Severity.INFO]) {\n      summary.push(`\\n${counts[Severity.INFO]} info issues.`)\n    }\n  }\n\n  return summary\n}\n\nexport function renderOffensesText(offensesByFile: OffenseMap, themeRootPath: string) {\n  const fileNames = Object.keys(offensesByFile).sort()\n\n  fileNames.forEach((filePath) => {\n    // Format the file path to be relative to the theme root.\n    // Remove the leading slash agnostic of windows or unix.\n    const headlineFilePath = filePath.replace(themeRootPath, '').slice(1)\n\n    renderInfo({\n      headline: headlineFilePath,\n      body: formatOffenses(offensesByFile[filePath]!),\n    })\n  })\n}\n\nexport function formatOffensesJson(offensesByFile: OffenseMap): TransformedOffenseMap[] {\n  return Object.entries(offensesByFile).map(([path, offenses]) => {\n    const transformedOffenses = offenses.map((offense: Offense) => {\n      return {\n        check: offense.check,\n        severity: severityToLabel(offense.severity),\n        start_row: offense.start.line,\n        start_column: offense.start.character,\n        end_row: offense.end.line,\n        end_column: offense.end.character,\n        message: offense.message,\n      }\n    })\n\n    const counts = countOffenseTypes(offenses)\n\n    return {\n      path,\n      offenses: transformedOffenses,\n      errorCount: counts[Severity.ERROR] || 0,\n      warningCount: counts[Severity.WARNING] || 0,\n      infoCount: counts[Severity.INFO] || 0,\n    }\n  })\n}\n\n/**\n * Handles the process exit based on the offenses and fail level.\n */\nexport function handleExit(offenses: Offense[], failLevel: FailLevel) {\n  // If there is no fail level set, exit with 0\n  if (!failLevel) process.exit(0)\n\n  const failSeverity = failLevelToSeverity(failLevel)\n  const shouldFail = failSeverity !== undefined && offenses.some((offense) => offense.severity <= failSeverity)\n\n  process.exit(shouldFail ? 1 : 0)\n}\n\n/**\n * Adds a '#' character at the start of each line in a string.\n */\nfunction commentString(input: string): string {\n  return input\n    .split('\\n')\n    .map((line) => `# ${line}`)\n    .join('\\n')\n}\n\nexport async function initConfig(root: string) {\n  const basefile = '.theme-check.yml'\n  const filePath = joinPath(root, basefile)\n  if (await fileExists(filePath)) {\n    outputInfo(`${basefile} already exists at ${root}`)\n    return\n  }\n\n  // The initialized config will extend the recommended settings and\n  // will simply show the commented checks for the user to customize.\n  const {settings} = await loadConfig(undefined, root)\n  const checksYml = commentString(YAML.stringify(settings))\n\n  const initConfigYml = YAML.stringify({extends: 'theme-check:recommended', ignore: ['node_modules/**']})\n\n  await writeFile(filePath, `${initConfigYml}${checksYml}`)\n\n  outputSuccess(`Created ${basefile} at ${root}`)\n}\n\nconst saveToDiskFixApplicator: FixApplicator = async (sourceCode, fix) => {\n  const updatedSource = applyFixToString(sourceCode.source, fix)\n  await writeFile(sourceCode.absolutePath, updatedSource)\n}\n\nexport async function performAutoFixes(sourceCodes: Theme, offenses: Offense[]) {\n  await autofix(sourceCodes, offenses, saveToDiskFixApplicator)\n}\n\nexport async function outputActiveConfig(themeRoot: string, configPath?: string) {\n  const {ignore, settings, root} = await loadConfig(configPath, themeRoot)\n\n  const config = {\n    // loadConfig flattens all configs, it doesn't extend anything\n    extends: [],\n\n    // Depending on how the configs were merged during loadConfig, there may be\n    // duplicate patterns to ignore. We can clean them before outputting.\n    ignore: [...new Set(ignore)],\n\n    root,\n\n    // Dump out the active settings for all checks.\n    ...settings,\n  }\n  outputInfo(YAML.stringify(config))\n}\n\nexport async function outputActiveChecks(root: string, configPath?: string) {\n  const {settings, ignore, checks} = await loadConfig(configPath, root)\n  // Depending on how the configs were merged during loadConfig, there may be\n  // duplicate patterns to ignore. We can clean them before outputting.\n  const ignorePatterns = [...new Set(ignore)]\n\n  const checkCodes = Object.keys(settings)\n\n  const checksList = checkCodes.reduce((acc: {[key: string]: unknown}, checkCode: string) => {\n    const {severity, enabled, ...additional} = settings[checkCode]!\n    if (!enabled) {\n      return acc\n    }\n\n    const severityLabel = severityToLabel(severity === undefined ? Severity.INFO : severity)\n\n    // Map metafields from the check into desired output format\n    const meta = checks.find((check) => check.meta.code === checkCode)\n    const metafields =\n      meta && meta.meta\n        ? {\n            description: meta.meta.docs.description,\n            doc: meta.meta.docs.url,\n          }\n        : {}\n\n    acc[checkCode] = {\n      severity: severityLabel,\n      ...metafields,\n      // Manually formatting ignore patterns to keep single line array output\n      ignored_patterns: `[${ignorePatterns.join(', ')}]`,\n      ...additional,\n    }\n    return acc\n  }, {})\n\n  outputInfo(YAML.stringify(checksList))\n}\n\ninterface ExtendedWriteStream extends NodeJS.WriteStream {\n  _handle: {\n    setBlocking: (blocking: boolean) => void\n  }\n}\n\ninterface HandleObject {\n  _handle: unknown\n}\n\ninterface HandleWithSetBlocking {\n  _handle: {\n    setBlocking: unknown\n  }\n}\n\nexport function isExtendedWriteStream(stream: NodeJS.WriteStream): stream is ExtendedWriteStream {\n  return (\n    '_handle' in stream &&\n    typeof (stream as HandleObject)._handle === 'object' &&\n    (stream as HandleObject)._handle !== null &&\n    typeof (stream as HandleWithSetBlocking)._handle.setBlocking === 'function'\n  )\n}\n"]}