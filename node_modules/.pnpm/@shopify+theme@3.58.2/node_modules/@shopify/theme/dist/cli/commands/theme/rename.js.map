{"version":3,"file":"rename.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/rename.ts"],"names":[],"mappings":";AAAA,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAgB,WAAW,EAAC,MAAM,0BAA0B,CAAA;AACnE,OAAO,EAAC,gBAAgB,EAAC,MAAM,gCAAgC,CAAA;AAC/D,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,EAAC,KAAK,EAAC,MAAM,aAAa,CAAA;AACjC,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AAEvE,MAAqB,MAAO,SAAQ,YAAY;IAsCvC,KAAK,CAAC,GAAG;QACd,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,EAAM,CAAC,CAAA;QACxC,MAAM,EAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAC,GAAG,KAAK,CAAA;QAExD,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACrC,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;QAErE,MAAM,aAAa,GAAkB;YACnC,OAAO,EAAE,IAAI;YACb,WAAW;YACX,KAAK;YACL,IAAI;SACL,CAAA;QAED,MAAM,WAAW,CAAC,YAAY,EAAE,aAAa,CAAC,CAAA;IAChD,CAAC;;;AApDM,cAAO,GAAG,4BAA4B,AAA/B,CAA+B;AAEtC,8BAAuB,GAAG;;;GAGhC,AAH6B,CAG7B;AAEM,kBAAW,GAAG,EAAI,CAAC,0BAA0B,EAAE,AAApC,CAAoC;AAE/C,YAAK,GAAG;IACb,GAAG,WAAW;IACd,KAAK,EAAE,UAAU,CAAC,KAAK;IACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,WAAW,EAAE,UAAU,CAAC,WAAW;IACnC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;QACjB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,6BAA6B;QAC1C,GAAG,EAAE,uBAAuB;QAC5B,QAAQ,EAAE,IAAI;KACf,CAAC;IACF,WAAW,EAAE,KAAK,CAAC,OAAO,CAAC;QACzB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,gCAAgC;QAC7C,GAAG,EAAE,0BAA0B;KAChC,CAAC;IACF,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC;QAClB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,uCAAuC;QACpD,GAAG,EAAE,uBAAuB;KAC7B,CAAC;IACF,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC;QAClB,IAAI,EAAE,GAAG;QACT,WAAW,EAAE,gCAAgC;QAC7C,GAAG,EAAE,mBAAmB;KACzB,CAAC;CACH,AA1BW,CA0BX;eApCkB,MAAM","sourcesContent":["import ThemeCommand from '../../utilities/theme-command.js'\nimport {RenameOptions, renameTheme} from '../../services/rename.js'\nimport {ensureThemeStore} from '../../utilities/theme-store.js'\nimport {themeFlags} from '../../flags.js'\nimport {Flags} from '@oclif/core'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\n\nexport default class Rename extends ThemeCommand {\n  static summary = 'Renames an existing theme.'\n\n  static descriptionWithMarkdown = `Renames a theme in your store.\n\n  If no theme is specified, then you're prompted to select the theme that you want to rename from the list of themes in your store.\n  `\n\n  static description = this.descriptionWithoutMarkdown()\n\n  static flags = {\n    ...globalFlags,\n    store: themeFlags.store,\n    password: themeFlags.password,\n    environment: themeFlags.environment,\n    name: Flags.string({\n      char: 'n',\n      description: 'The new name for the theme.',\n      env: 'SHOPIFY_FLAG_NEW_NAME',\n      required: true,\n    }),\n    development: Flags.boolean({\n      char: 'd',\n      description: 'Rename your development theme.',\n      env: 'SHOPIFY_FLAG_DEVELOPMENT',\n    }),\n    theme: Flags.string({\n      char: 't',\n      description: 'Theme ID or name of the remote theme.',\n      env: 'SHOPIFY_FLAG_THEME_ID',\n    }),\n    live: Flags.boolean({\n      char: 'l',\n      description: 'Rename your remote live theme.',\n      env: 'SHOPIFY_FLAG_LIVE',\n    }),\n  }\n\n  public async run(): Promise<void> {\n    const {flags} = await this.parse(Rename)\n    const {password, development, name, theme, live} = flags\n\n    const store = ensureThemeStore(flags)\n    const adminSession = await ensureAuthenticatedThemes(store, password)\n\n    const renameOptions: RenameOptions = {\n      newName: name,\n      development,\n      theme,\n      live,\n    }\n\n    await renameTheme(adminSession, renameOptions)\n  }\n}\n"]}