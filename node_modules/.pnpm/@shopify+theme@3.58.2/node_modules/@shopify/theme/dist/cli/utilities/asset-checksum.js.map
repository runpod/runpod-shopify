{"version":3,"file":"asset-checksum.js","sourceRoot":"","sources":["../../../src/cli/utilities/asset-checksum.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAC,MAAM,eAAe,CAAA;AAE7E,OAAO,EAAC,QAAQ,EAAC,MAAM,8BAA8B,CAAA;AAErD,MAAM,CAAC,KAAK,UAAU,QAAQ,CAAC,IAAY,EAAE,IAAY;IACvD,IAAI,OAAO,GAAG,MAAM,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;IAE7C,IAAI,CAAC,OAAO;QAAE,OAAO,EAAE,CAAA;IAEvB,IAAI,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;QAAE,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;IAEjD,IAAI,UAAU,CAAC,IAAI,CAAC;QAAE,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IAE9D,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE;QAChB,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,CAAA;QAEhC;;;;;;;WAOG;QACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;YACvB,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;SAC/C;KACF;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,CAAA;AACrB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,OAAe;IAC3C,IAAI,KAAK,GAAG,KAAK,CAAA;IACjB,IAAI,YAAY,GAAG,KAAK,CAAA;IACxB,IAAI,YAAY,GAAG,EAAE,CAAA;IAErB,KAAK,MAAM,IAAI,IAAI,OAAO,EAAE;QAC1B,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,EAAE;YACjC,KAAK,GAAG,CAAC,KAAK,CAAA;SACf;QAED,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;YAC7C,SAAQ;SACT;QAED,YAAY,IAAI,IAAI,CAAA;QACpB,YAAY,GAAG,IAAI,KAAK,IAAI,IAAI,CAAC,YAAY,CAAA;KAC9C;IAED,OAAO,YAAY,CAAA;AACrB,CAAC;AAED,SAAS,GAAG,CAAC,OAAwB;IACnC,MAAM,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAExE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAA;AACzB,CAAC;AAED;;;;;;;;;;;;;;GAcG;AACH,MAAM,UAAU,2BAA2B,CAAC,cAA0B;IACpE,OAAO,cAAc,CAAC,MAAM,CAAC,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE;QACrC,MAAM,aAAa,GAAG,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;QAE/C,IAAI,aAAa,EAAE;YACjB,OAAO,CAAC,eAAe,CAAC,cAAc,EAAE,GAAG,CAAC,CAAA;SAC7C;QAED,OAAO,IAAI,CAAA;IACb,CAAC,CAAC,CAAA;AACJ,CAAC;AAED;;;;;GAKG;AACH,SAAS,eAAe,CAAC,SAAqB,EAAE,GAAW;IACzD,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,GAAG,KAAK,GAAG,GAAG,SAAS,CAAC,CAAA;AACvE,CAAC","sourcesContent":["import {isThemeAsset, isJson, readThemeFile, isTextFile} from './theme-fs.js'\nimport {Checksum} from '@shopify/cli-kit/node/themes/types'\nimport {fileHash} from '@shopify/cli-kit/node/crypto'\n\nexport async function checksum(root: string, path: string) {\n  let content = await readThemeFile(root, path)\n\n  if (!content) return ''\n\n  if (Buffer.isBuffer(content)) return md5(content)\n\n  if (isTextFile(path)) content = content.replace(/\\r\\n/g, '\\n')\n\n  if (isJson(path)) {\n    content = normalizeJson(content)\n\n    /**\n     * The backend (Assets API) escapes forward slashes for internal JSON\n     * assets such as templates/*.json, sections/*.json, config/*.json.\n     *\n     * To maintain consistency in checksum calculation, we follow the same\n     * approach here (note that already escaped forward slashes are not\n     * re-escaped).\n     */\n    if (!isThemeAsset(path)) {\n      content = content.replace(/(?<!\\\\)\\//g, '\\\\/')\n    }\n  }\n\n  return md5(content)\n}\n\nexport function normalizeJson(jsonStr: string) {\n  let inStr = false\n  let wasBackslash = false\n  let formattedStr = ''\n\n  for (const char of jsonStr) {\n    if (char === '\"' && !wasBackslash) {\n      inStr = !inStr\n    }\n\n    if (!inStr && (char === ' ' || char === '\\n')) {\n      continue\n    }\n\n    formattedStr += char\n    wasBackslash = char === '\\\\' && !wasBackslash\n  }\n\n  return formattedStr\n}\n\nfunction md5(content: string | Buffer) {\n  const buffer = Buffer.isBuffer(content) ? content : Buffer.from(content)\n\n  return fileHash(buffer)\n}\n\n/**\n * Filters out generated asset files from a list of theme checksums.\n *\n * The checksums API returns entries for both original and generated files. For\n * instance, if there's a Liquid file 'assets/basic.css.liquid', the API will\n * return entries for both 'assets/basic.css.liquid' and the generated\n * 'assets/basic.css' with the same checksum.\n *\n * Example:\n *   - key: 'assets/basic.css',        checksum: 'e4b6aac5f2af8ea6e197cc06102186e9'\n *   - key: 'assets/basic.css.liquid', checksum: 'e4b6aac5f2af8ea6e197cc06102186e9'\n *\n * This function filters out the generated files (like 'assets/basic.css'),\n * as these are not needed for theme comparison.\n */\nexport function rejectGeneratedStaticAssets(themeChecksums: Checksum[]) {\n  return themeChecksums.filter(({key}) => {\n    const isStaticAsset = key.startsWith('assets/')\n\n    if (isStaticAsset) {\n      return !hasLiquidSource(themeChecksums, key)\n    }\n\n    return true\n  })\n}\n\n/**\n * Checks if a given key has a corresponding liquid source in the provided checksums.\n * @param checksums - The array of checksums to search through.\n * @param key - The key to check for a liquid source.\n * @returns True if a liquid source exists for the given key, false otherwise.\n */\nfunction hasLiquidSource(checksums: Checksum[], key: string) {\n  return checksums.some((checksum) => checksum.key === `${key}.liquid`)\n}\n"]}