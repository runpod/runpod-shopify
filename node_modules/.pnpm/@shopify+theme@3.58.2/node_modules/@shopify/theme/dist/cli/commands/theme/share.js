var _a;
import { themeFlags } from '../../flags.js';
import { ensureThemeStore } from '../../utilities/theme-store.js';
import ThemeCommand from '../../utilities/theme-command.js';
import { execCLI2 } from '@shopify/cli-kit/node/ruby';
import { Flags } from '@oclif/core';
import { globalFlags } from '@shopify/cli-kit/node/cli';
import { ensureAuthenticatedThemes } from '@shopify/cli-kit/node/session';
class Share extends ThemeCommand {
    async run() {
        const { flags } = await this.parse(_a);
        const flagsToPass = this.passThroughFlags(flags, { allowedFlags: _a.cli2Flags });
        const store = ensureThemeStore(flags);
        const adminSession = await ensureAuthenticatedThemes(store, flags.password);
        await execCLI2(['theme', 'share', flags.path, ...flagsToPass], { store, adminToken: adminSession.token });
    }
}
_a = Share;
Share.summary = 'Creates a shareable, unpublished, and new theme on your theme library with a randomized name.';
Share.descriptionWithMarkdown = `Uploads your theme as a new, unpublished theme in your theme library. The theme is given a randomized name.

  This command returns a [preview link](https://help.shopify.com/manual/online-store/themes/adding-themes?shpxid=cee12a89-AA22-4AD3-38C8-91C8FC0E1FB0#share-a-theme-preview-with-others) that you can share with others.`;
Share.description = _a.descriptionWithoutMarkdown();
Share.flags = {
    ...globalFlags,
    ...themeFlags,
    force: Flags.boolean({
        hidden: true,
        char: 'f',
        description: 'Proceed without confirmation, if current directory does not seem to be theme directory.',
        env: 'SHOPIFY_FLAG_FORCE',
    }),
};
Share.cli2Flags = ['force'];
export default Share;
//# sourceMappingURL=share.js.map